; maquina copiadora de binarios

30 1 x r 31
30 0 y r 34
30 _ * r 42

31 1 * r 31
31 0 * r 31
31 _ * r 36

32 _ 1 l 33
32 1 * r 32
32 0 * r 32

33 0 * l 33
33 1 * l 33
33 _ * l 33
33 x 1 r 30
33 y 0 r 30

34 1 * r 34
34 0 * r 34
34 _ * r 41

35 _ 0 l 33
35 1 * r 35
35 0 * r 35

36 * * r 37
37 * * r 38 
38 * * r 39
39 * * r 40
40 * * r 32

41 _ * r 41
41 1 * r 35
41 0 * r 35

42 _ * r 42
42 1 * r 100

100 1 * r 100
100 0 * r 100
100 _ $ l 101
101 1 * l 101
101 0 * l 101
101 _ * r 0

0 0 _ r 1
0 1 0 r 5
0 $ _ r 11

1 $ * r 2
1 1 * r 1
1 0 * r 1

2 1 A r 2
2 _ * l 3

3 A 1 r 4
3 _ * r 0
3 1 * l 3
3 $ * l 8

4 _ 1 l 3
4 1 * r 4

5 1 * r 5
5 0 * r 5
5 $ * r 6

6 1 * r 6
6 _ 1 l 7

7 1 * l 7
7 $ * l 8
7 0 * l 7
7 _ * r 0

8 0 * l 9
8 1 * l 7

9 _ * r 10
9 1 * l 7
9 0 * l 7

10 0 _ r 0

; For every nonnegative integer, machine computes floor(sqrt(n))
; It uses fact that n^2=1+3+5+...+(2n-1)

; Short setup
; On the left there is current addend, now it is 1
11 1 1 l 11
11 _ _ l 12
12 _ 1 r 16
; We mark exactly that many 1's from input as there is in addend
13 _ 1 l 17
13 x x l 13
13 1 x r 14
14 x x r 14
14 _ _ r 15
15 x x r 15
15 1 x l 16
15 _ _ l 19
16 x x l 16
16 _ _ l 13 ; aca 15 y 16 nuevos
; If we used whole addend, we increase it by 2
17 _ 1 r 18
18 1 1 r 18
18 x 1 r 18
18 _ _ l 13 ; aca 13 es nuevo
; If we marked whole input, we remove it, leaving only output
19 x _ l 19
19 _ 1 l 20
; At this moment, addend is exactly 2n+1, where n is wanted output
20 _ _ l 20
20 x _ l 21
20 1 _ l 21
21 x _ r 22
21 1 _ r 22
21 _ _ r 25
22 _ _ r 22
22 1 1 r 23
23 1 1 r 23
23 _ 1 l 24
24 1 1 l 24
24 _ _ l 20
; Now there is n+1 left on tape. We remove one 1 and we're done
25 _ _ r 25
25 1 _ r 26

26 1 X l 27
26 _ * l 28
26 X * r 26

27 1 0 l 27
27 0 1 r 29
27 _ 1 r 29
27 X * l 27

28 X _ l 28
28 1 * * halt
28 0 * * halt

29 1 * r 29
29 0 * r 29
29 X * r 26